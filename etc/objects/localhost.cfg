###############################################################################
# LOCALHOST.CFG - SAMPLE OBJECT CONFIG FILE FOR MONITORING THIS MACHINE
#
#
# NOTE: This config file is intended to serve as an *extremely* simple 
#       example of how you can create configuration entries to monitor
#       the local (Linux) machine.
#
###############################################################################




###############################################################################
###############################################################################
#
# HOST DEFINITION
#
###############################################################################
###############################################################################

# Define a host for the local machine

define host{
        use                     linux-server            ; Name of host template to use
							; This host definition will inherit all variables that are defined
							; in (or inherited by) the linux-server host template definition.
        host_name               localhost
        alias                   localhost
        address                 127.0.0.1
        }

define host{
        use                     linux-server            ; Name of host template to use
                                                        ; This host definition will inherit all variables that are defined
                                                        ; in (or inherited by) the linux-server host template definition.
        host_name               ip-172-31-31-71
        alias                   mongodb-primary
        address                 ip-172-31-31-71
        hostgroups              mongod-server     
        }
define host{
        use                     linux-server            ; Name of host template to use
                                                        ; This host definition will inherit all variables that are defined
                                                        ; in (or inherited by) the linux-server host template definition.
        host_name               ip-172-31-88-187
        alias                   mongodb-secondary-01
        address                 ip-172-31-88-187
        hostgroups               mongod-server
        }
define host{
        use                     linux-server            ; Name of host template to use
                                                        ; This host definition will inherit all variables that are defined
                                                        ; in (or inherited by) the linux-server host template definition.
        host_name               ip-172-31-92-233
        alias                   mongodb-sec02
        address                 ip-172-31-92-233
        hostgroups              mongod-server
        }


###############################################################################
###############################################################################
#
# HOST GROUP DEFINITION
#
###############################################################################
###############################################################################

# Define an optional hostgroup for Linux machines

define hostgroup{
        hostgroup_name  linux-servers ; The name of the hostgroup
        alias           Linux Servers ; Long name of the group
        members         localhost     ; Comma separated list of hosts that belong to this group
        }

define hostgroup{
        hostgroup_name  mongod-server ; The name of the hostgroup
        alias           mongod-server ; Long name of the group
        members         ip-172-31-31-71,ip-172-31-88-187,ip-172-31-92-233 ; Comma separated list of hosts that belong to this group
        }



###############################################################################
###############################################################################
#
# SERVICE DEFINITIONS
#
###############################################################################
###############################################################################


# Define a service to "ping" the local machine

define service{
        use                             local-service         ; Name of service template to use
        host_name                       localhost
        service_description             PING
	check_command			check_ping!100.0,20%!500.0,60%
        }


# Define a service to check the disk space of the root partition
# on the local machine.  Warning if < 20% free, critical if
# < 10% free space on partition.

define service{
        use                             local-service         ; Name of service template to use
        host_name                       localhost
        service_description             Root Partition
	check_command			check_local_disk!20%!10%!/
        }



# Define a service to check the number of currently logged in
# users on the local machine.  Warning if > 20 users, critical
# if > 50 users.

define service{
        use                             local-service         ; Name of service template to use
        host_name                       localhost
        service_description             Current Users
	check_command			check_local_users!20!50
        }


# Define a service to check the number of currently running procs
# on the local machine.  Warning if > 250 processes, critical if
# > 400 users.

define service{
        use                             local-service         ; Name of service template to use
        host_name                       localhost
        service_description             Total Processes
	check_command			check_local_procs!250!400!RSZDT
        }



# Define a service to check the load on the local machine. 

define service{
        use                             local-service         ; Name of service template to use
        host_name                       localhost
        service_description             Current Load
	check_command			check_local_load!5.0,4.0,3.0!10.0,6.0,4.0
        }



# Define a service to check the swap usage the local machine. 
# Critical if less than 10% of swap is free, warning if less than 20% is free

define service{
        use                             local-service         ; Name of service template to use
        host_name                       localhost
        service_description             Swap Usage
	check_command			check_local_swap!20!10
        }



# Define a service to check SSH on the local machine.
# Disable notifications for this service by default, as not all users may have SSH enabled.

define service{
        use                             local-service         ; Name of service template to use
        host_name                       localhost
        service_description             SSH
	check_command			check_ssh
	notifications_enabled		0
        }



# Define a service to check HTTP on the local machine.
# Disable notifications for this service by default, as not all users may have HTTP enabled.

define service{
        use                             local-service         ; Name of service template to use
        host_name                       localhost
        service_description             HTTP
	check_command			check_http
	notifications_enabled		0
        }

####MOngod Service##
define service {
    use                 generic-service
    hostgroup_name          mongod-server
    service_description     Mongo Connect Check
    check_command           check_mongodb!connect!27017!2!4
}
define service {
    use                 generic-service
    hostgroup_name          mongod-server
    service_description     Mongo Free Connections
    check_command           check_mongodb!connections!27017!70!80
}
define service {
    use                 generic-service
    hostgroup_name          mongod-server
    service_description     Mongo Replication Lag
    check_command           check_mongodb!replication_lag!27017!15!30
}
define service {
    use                 generic-service
    hostgroup_name          mongod-server
    service_description     Mongo Replication Lag Percentage
    check_command           check_mongodb!replication_lag_percent!27017!50!75
}
define service {
    use                 generic-service
    hostgroup_name          mongod-server
    service_description     Mongo Memory Usage
    check_command           check_mongodb!memory!27017!20!28
}
define service {
    use                 generic-service
    hostgroup_name          mongod-server
    service_description     Mongo Mapped Memory Usage
    check_command           check_mongodb!memory_mapped!27017!20!28
}
define service {
    use                 generic-service
    hostgroup_name          mongod-server
    service_description     Mongo Lock Percentage
    check_command           check_mongodb!lock!27017!5!10
}
define service {
    use                 generic-service
    hostgroup_name          mongod-server
    service_description     Mongo Flush Average
    check_command           check_mongodb!flushing!27017!100!200
}
define service {
    use                 generic-service
    hostgroup_name          mongod-server
    service_description     Mongo Last Flush Time
    check_command           check_mongodb!last_flush_time!27017!200!400
}
define service {
      use                     generic-service
      hostgroup_name          mongod-server
      service_description     MongoDB state
      check_command           check_mongodb!replset_state!27017!0!0
}
define service {
      use                     generic-service
      hostgroup_name          mongod-server
      service_description     MongoDB Index Miss Ratio
      check_command           check_mongodb!index_miss_ratio!27017!.005!.01
}
define service {
      use                     generic-service
      hostgroup_name          mongod-server
      service_description     MongoDB Number of databases
      check_command           check_mongodb!databases!27017!300!500
}

define service {
      use                     generic-service
      hostgroup_name          mongod-server
      service_description     MongoDB Number of collections
      check_command           check_mongodb!collections!27017!300!500
}
define service {
      use                     generic-service
      hostgroup_name          mongod-server
      service_description     MongoDB Database size your-database
      check_command           check_mongodb_database!database_size!27017!300!500!your-database
}
define service {
      use                     generic-service
      hostgroup_name          mongod-server
      service_description     MongoDB Database index size your-database
      check_command           check_mongodb_database!database_indexes!27017!50!100!your-database
}
define service {
      use                     generic-service
      hostgroup_name          mongod-server
      service_description     MongoDB Database index size your-database
      check_command           check_mongodb_collection!collection_indexes!27017!50!100!your-database!your-collection
}

define service {
      use                     generic-service
      hostgroup_name          mongod-server
      service_description     MongoDB Replicaset Master Monitor: your-replicaset
      check_command           check_mongodb_replicaset!replica_primary!27017!0!1!your-replicaset
}
define service {
      use                     generic-service
      hostgroup_name          mongod-server
      service_description     MongoDB Updates per Second
      check_command           check_mongodb_query!queries_per_second!27017!200!150!update
}
define service {
    use                 generic-service
    hostgroup_name          mongod-server
    service_description     Mongo Connect Check
    check_command           check_mongodb!connect_primary!27017!2!4
}
define service {
    use                 generic-service
    hostgroup_name          mongod-server
    service_description     Mongo Collection State
    check_command           check_mongodb!collection_state!27017!your-database!your-collection
}
# Example - Check current warnings...
define service{
	use local-service
	host_name localhost
	service_description Nagios Server Warnings
	check_command check_warnings
}
#define service {
#	use                 local-service
#	host_name           localhost
#	service_description Root Home Usage
#	check_command       check_root_home_du
#}


define service {
        use                             local-service
        host_name                       localhost
        service_description             Load Average on CPU
        check_command                   check_loadaverage
        }
